//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.34014
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Linq;

public sealed class GameObjectUtils
{
	public static void AppendChild(GameObject parent, GameObject child)
	{
		if (parent != null && child != null) {
			child.transform.parent = parent.transform;
		}
	}

	public static GameObject GetPrefabFromResources(string prefabPath)
	{
		return (GameObject)Resources.Load (prefabPath);
	}

	public static void CenterOnChildren(GameObject gameObject)
	{
		if (gameObject == null) {
			return;	
		}

		Transform parentTransform = gameObject.transform;

		var children = parentTransform.Cast<Transform>().ToList();
		
		var cumulativePositions = Vector3.zero;
		foreach(var child in children)
		{
			cumulativePositions += child.position;
			child.parent = null;
		}
		parentTransform.position = cumulativePositions / children.Count;
		
		foreach (var child in children) {
			child.parent = parentTransform;
		}
	}   
}

